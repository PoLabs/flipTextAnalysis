% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wrappers.R
\name{AsSentimentMatrix}
\alias{AsSentimentMatrix}
\title{\code{AsSentimentMatrix}}
\usage{
AsSentimentMatrix(x, remove.stopwords = TRUE, stoplist = get("ftaStopList"),
  operations = c("spelling", "stemming"),
  spelling.dictionary = get("ftaDictionary"), manual.replacements = NULL,
  pos.words = get("ftaPositiveWords"), neg.words = get("ftaNegativeWords"),
  check.simple.suffixes = FALSE, simple.suffixes = c("s", "es", "ed", "d",
  "ing"), blanks.as.missing = FALSE)
}
\arguments{
\item{x}{Either a character vector or a WordBag object, created for example by the function InitializeWordBag.
If \code{x} is a character vector then additional parameters can be supplied for processing the
text before scoring sentiment. For a description of the options see \code{\link{InitializeWordBag}}.}

\item{remove.stopwords}{A boolean value specifying whether or not to identify stopwords and remove them from subsequent analyses.}

\item{stoplist}{A character vector containg the stopwords. The default value is this package's built-in stopwords list, ftaStopList.}

\item{operations}{A character vector specifying the sequence of operations to be performed on the text. Valid operations are
\code{"spelling"}, \code{"stemming"}, and \code{"replacement"} (for manually replacing words).}

\item{spelling.dictionary}{A character vector containing the dictionary to use to check each word for mis-spellings. The default value is this package's built-in english dictionary, ftaDictionary.}

\item{manual.replacements}{A matrix of characters with two columms. The first column specifies the words to replace, and the second column specifies the corresponding replacements.}

\item{pos.words}{A character vector containing words that should be scored positively.}

\item{neg.words}{A character vector containing words that should be scored negatively.}

\item{check.simple.suffixes}{If true, whevenver a token is not found in
pos.words AND neg.words, the algorithm will attempt to trim suffixes
from the word and check the dictionaries again. This is to account for
cases where the dictionaries do not contain variants of sentiment words
(plurals, past tenses, etc). The suffixes to check are specified in the
next argument.}

\item{simple.suffixes}{An array of strings containing suffixes to strip when checking
for words among the positive and negative word lists.}

\item{blanks.as.missing}{Boolean indicating whether to treat blanks text as missing or return 0 (default).}
}
\value{
A matrix with three columns, and one row for each of the original text responses in the word bag.
        The first column provides a count of the positive words that have been identified in each
        response, the second column gives a count of the negative words, and the third column gives the
        net sentiment score, which is the difference between the two.
}
\description{
Generate a matrix of sentiment scores from a character vector or wordBag object.
}
\details{
The scoring algorithm attempts to handle negation by looking for words like "not" which occur
         one or two tokens prior to a sentiment word. For example, "not bad" would yield a positive
         score of 1 rather than a negative score of -1 which would be applied for the word "bad".
}
\examples{
AsSentimentMatrix(ftaFavoriteThings)
}

